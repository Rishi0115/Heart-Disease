# -*- coding: utf-8 -*-
"""Copy of Heart Disease Predicition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nVZJB-1UZdewWR3pxCB4XEFVSi0GGHjE
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data=pd.read_csv('/content/heart_disease_data.csv')

heart_data.head()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data['target'].value_counts()

x=heart_data.drop(columns='target',axis=1)
y=heart_data['target']

print(x)

y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

model=LogisticRegression()

model.fit(x_train,y_train)

x_train_prediction=model.predict(x_train)
training_data_accuracy=accuracy_score(x_train_prediction,y_train)

print('Accuracy on traing : ',training_data_accuracy)

x_test_prediction=model.predict(x_test)
test_data_accuracy=accuracy_score(x_test_prediction,y_test)

print('Accuracy on test: ',test_data_accuracy)

input_data=(41,0,1,130,204,0,0,172,0,1,4,2,0)
input_data_as_numpy_array=np.asarray(input_data)
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)
prediction=model.predict(input_data_reshaped)
print(prediction)
if(prediction[0]==0):
  print('THe person does not have heart disease')
else:
  print('Heart disease !!')

import pickle

# Save
with open('model.pkl', 'wb') as f:
    pickle.dump(model, f)

# Later load
with open('model.pkl', 'rb') as f:
    loaded_model = pickle.load(f)

